#ifndef CARPET_PROFILE_3D_H
#define CARPET_PROFILE_3D_H

#include <stdbool.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void cprof3d_file_t;
typedef void cprof3d_dset_t;

/* Coordinate mapping type */
typedef void (*cprof3d_cmap)(
        double, double, double,
        double*, double*, double*);
/* Trivial coordinate mapping (identity) */
void cprof3d_cmap_default(
        double x_in, double y_in, double z_in,
        double * x_out, double * y_out, double * z_out);
/* Coordinate mapping for reflection symmetry */
void cprof3d_cmap_reflecting_xy(
        double x_in, double y_in, double z_in,
        double * x_out, double * y_out, double * z_out);

/* Variable transformation */
typedef double (*cprof3d_transf)(
        double, double, double, double);
/* Trivial variable transformation (identity) */
double cprof3d_transf_default(
        double var, double x_in, double y_in, double z_in);
/* Change sign of variable across the xy-plane */
double cprof3d_transf_reflecting_xy(
        double var, double x_in, double y_in, double z_in);

/* Open a 3D HDF5 datafile generated by ExtractProfile3D.py */
cprof3d_file_t * cprof3d_open_file(
        char const * fname);

/* Read a dataset */
cprof3d_dset_t * cprof3d_read_dset(
        cprof3d_file_t const * dfile,
        char const * vname);

/* Interpolate dataset at the given locations */
/*
 * Interpolates a variable at the given locations, apply symmetry
 * transformation if requested.
 *
 * NOTE: points outside of the domain are not set!
 *
 * [out] true  if all of the data points have been filled
 *       false if some points could not be filled with interpolation
 */
bool cprof3d_interp(
        cprof3d_dset_t const * dset, /* [in]  Dataset to interpolate */
        cprof3d_cmap cmap,           /* [in]  Coordinate mapping */
        cprof3d_transf transf,       /* [in]  Variable transformation */
        int const np,                /* [in]  Total number of grid points */
        double const * xp,           /* [in]  Interpolation coordinates */
        double const * yp,           /* [in]  Interpolation coordinates */
        double const * zp,           /* [in]  Interpolation coordinates */
        double * data);              /* [out] Interpolated values */

void cprof3d_del_dset(
        cprof3d_dset_t * dset);
void cprof3d_close_file(
        cprof3d_file_t * dfile);

#ifdef __cplusplus
}
#endif

#endif
